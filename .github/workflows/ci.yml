# This workflow analyzes the Osprey MATLAB repository with GitHub Actions for code scanning

name: MATLAB Code Scanning

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events for the main branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "analyze"
  analyze:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      # Sets up MATLAB on a GitHub-hosted runner
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: R2021a # Ensure compatibility with your MATLAB version

      # Runs a set of commands using the runner's shell to install dependencies
      - name: Install dependencies
        run: |
          matlab -batch "disp('Adding dependencies'); addpath(genpath('code'));"

      # Runs a set of commands using the runner's shell to run tests
      - name: Run tests
        uses: matlab-actions/run-tests@v2
        with:
          source-folder: code

      # Run code analysis (customize this command based on your needs)
      - name: Run code analysis
        uses: matlab-actions/run-command@v2
        with:
          command: |
            disp('Running code analysis');
            results = checkcode('code', '-fullpath');
            disp(results);

      # Upload code analysis results to GitHub
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: code-analysis-results.sarif
