# This workflow analyzes the Osprey MATLAB repository with MATLAB Code Analyzer in a Docker container

name: MATLAB Code Scanning

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events for the main branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  analyze:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Set up Octave on the GitHub runner
      - name: Install Octave
        run: |
          sudo apt-get update
          sudo apt-get install -y octave

      # Run static code analysis using Octave
      - name: Run Code Analysis
        run: |
          octave --eval "addpath(genpath('code')); results = mlint('code'); disp(results);"

      # Save the results to a file
      - name: Save results
        run: |
          octave --eval "addpath(genpath('code')); results = mlint('code'); save('code-analysis-results.mat', 'results');"

      # Upload code analysis results to GitHub
      - name: Upload analysis results
        uses: actions/upload-artifact@v3
        with:
          name: code-analysis-results
          path: code-analysis-results.mat
