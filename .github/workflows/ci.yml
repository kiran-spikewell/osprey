# This workflow analyzes the Osprey MATLAB repository using Octave for static code analysis

name: MATLAB Code Scanning

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events for the develop branch
  push:
    branches: [ develop ] # Check for the branch names
  pull_request:
    branches: [ develop ] # Check for the branch names

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }} #Double-check your secret name before pushing

      - name: Install Octave
        run: |
          sudo apt-get update
          sudo apt-get install -y octave

      - name: Run static code analysis
        run: |
          echo "addpath('code'); files = dir('code/**/*.m'); results = {}; for k = 1:length(files), filePath = fullfile(files(k).folder, files(k).name); fid = fopen(filePath, 'r'); code = fread(fid, '*char')'; fclose(fid); issues = codeAnalysis(code); if ~isempty(issues), results{end+1} = {filePath, issues}; end; end; save('code-analysis-results.m', 'results');" > analyze_code.m
          octave --no-gui analyze_code.m

      - name: Convert results to text
        run: |
          octave --no-gui --eval "load('code-analysis-results.m'); fid = fopen('code-analysis-results.txt', 'w'); for i = 1:length(results), fprintf(fid, 'File: %s\n', results{i}{1}); fprintf(fid, '%s\n', results{i}{2}{:}); end; fclose(fid);"

      - name: Upload analysis results
        uses: actions/upload-artifact@v3
        with:
          name: code-analysis-results
          path: code-analysis-results.txt
